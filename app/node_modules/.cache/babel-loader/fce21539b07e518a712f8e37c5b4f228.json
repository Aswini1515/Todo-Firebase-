{"ast":null,"code":"import _classCallCheck from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import*as cl from'classnames';var Todo=/*#__PURE__*/function(_Component){_inherits(Todo,_Component);function Todo(props){var _this;_classCallCheck(this,Todo);_this=_possibleConstructorReturn(this,_getPrototypeOf(Todo).call(this,props));_this.state={editing:false,updatedTitle:''};_this.handleToggleTodo=_this.handleToggleTodo.bind(_assertThisInitialized(_this));_this.handleStartEditing=_this.handleStartEditing.bind(_assertThisInitialized(_this));_this.handleRemoveTodo=_this.handleRemoveTodo.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.handleKeyDown=_this.handleKeyDown.bind(_assertThisInitialized(_this));_this.handleInput=_this.handleInput.bind(_assertThisInitialized(_this));return _this;}_createClass(Todo,[{key:\"handleToggleTodo\",value:function handleToggleTodo(todo){this.props.toggleTodo(todo);}},{key:\"handleRemoveTodo\",value:function handleRemoveTodo(id){this.props.removeTodo(id);}},{key:\"handleStartEditing\",value:function handleStartEditing(e){this.setState({editing:true,updatedTitle:this.props.task.title});}},{key:\"handleSubmit\",value:function handleSubmit(){this.props.updateTodo(this.props.task,this.state.updatedTitle);this.setState({editing:false});}},{key:\"handleKeyDown\",value:function handleKeyDown(e){if(e.key==='Escape'){this.setState({editing:false});}else if(e.key==='Enter'){this.handleSubmit();}}},{key:\"handleInput\",value:function handleInput(e){this.setState({updatedTitle:e.target.value});}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,editing=_this$state.editing,updatedTitle=_this$state.updatedTitle;return React.createElement(\"li\",{className:cl({completed:this.props.task.isCompleted,editing:editing})},React.createElement(\"div\",{className:\"view\"},React.createElement(\"input\",{className:\"toggle\",type:\"checkbox\",onChange:function onChange(){return _this2.handleToggleTodo(_this2.props.task);},checked:this.props.task.isCompleted}),React.createElement(\"label\",{onDoubleClick:this.handleStartEditing},this.props.task.title),React.createElement(\"button\",{className:\"destroy\",onClick:function onClick(){return _this2.handleRemoveTodo(_this2.props.task.id);}})),React.createElement(\"input\",{className:\"edit\",value:updatedTitle,onBlur:this.handleSubmit,onKeyDown:this.handleKeyDown,onChange:this.handleInput,type:\"text\"}));}}]);return Todo;}(Component);export default Todo;","map":{"version":3,"sources":["/usr/src/app/src/components/Todo.js"],"names":["React","Component","cl","Todo","props","state","editing","updatedTitle","handleToggleTodo","bind","handleStartEditing","handleRemoveTodo","handleSubmit","handleKeyDown","handleInput","todo","toggleTodo","id","removeTodo","e","setState","task","title","updateTodo","key","target","value","completed","isCompleted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as cl from 'classnames'\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false,\n            updatedTitle: ''\n        }\n        this.handleToggleTodo = this.handleToggleTodo.bind(this);\n        this.handleStartEditing=this.handleStartEditing.bind(this);\n        this.handleRemoveTodo = this.handleRemoveTodo.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n    handleToggleTodo(todo) {\n            this.props.toggleTodo(todo);\n        }\n\n     handleRemoveTodo(id) {\n                this.props.removeTodo(id);\n            }\n\n    handleStartEditing(e) {\n            this.setState({\n                editing: true,\n                updatedTitle: this.props.task.title\n            })\n        }\n\n    handleSubmit() {\n            this.props.updateTodo(this.props.task,this.state.updatedTitle)\n            this.setState({\n                editing: false\n            })\n        }\n\n        handleKeyDown(e) {\n            if (e.key === 'Escape') {\n                this.setState({\n                    editing: false\n                })\n            } else if (e.key === 'Enter') {\n                this.handleSubmit()\n            }\n        }\n\n        handleInput(e) {\n            this.setState({\n                updatedTitle: e.target.value\n            })\n        }\n\n render() {\n        let {editing, updatedTitle} = this.state\n        return (\n            <li className={cl({completed: this.props.task.isCompleted, editing})}>\n                <div className=\"view\">\n                    <input className=\"toggle\"\n                           type=\"checkbox\"\n                           onChange={() => this.handleToggleTodo(this.props.task)}\n                           checked={this.props.task.isCompleted}\n                    />\n                    <label onDoubleClick={this.handleStartEditing}>\n                        {this.props.task.title}\n                    </label>\n                    <button className=\"destroy\"\n                            onClick={() => this.handleRemoveTodo(this.props.task.id)}\n                    />\n                </div>\n                <input className=\"edit\"\n                       value={updatedTitle}\n                       onBlur={this.handleSubmit}\n                       onKeyDown={this.handleKeyDown}\n                       onChange={this.handleInput}\n                       type=\"text\"\n                />\n            </li>\n\n\n        )\n    }\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}