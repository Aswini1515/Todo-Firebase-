{"ast":null,"code":"import _classCallCheck from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import TodoForm from'./components/TodoForm';import Todo from'./components/Todo';import FooterBar from'./components/FooterBar';import{DB_CONFIG}from'./config/config';import firebase from'firebase/app';import'firebase/database';import'./App.css';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.addTodo=_this.addTodo.bind(_assertThisInitialized(_this));_this.updateFilter=_this.updateFilter.bind(_assertThisInitialized(_this));_this.removeTodo=_this.removeTodo.bind(_assertThisInitialized(_this));_this.toggleAll=_this.toggleAll.bind(_assertThisInitialized(_this));_this.toggleTodo=_this.toggleTodo.bind(_assertThisInitialized(_this));_this.updateTodo=_this.updateTodo.bind(_assertThisInitialized(_this));_this.clearCompleted=_this.clearCompleted.bind(_assertThisInitialized(_this));_this.updateShow=_this.updateShow.bind(_assertThisInitialized(_this));_this.app=firebase.initializeApp(DB_CONFIG);_this.database=_this.app.database().ref().child('todos');_this.state={todos:[],toggle:false,filter:\"all\"};return _this;}_createClass(App,[{key:\"componentWillMount\",value:function componentWillMount(){var _this2=this;var tasks=[];this.database.on('value',function(snap){snap.forEach(function(childSnap){var task={'id':childSnap.key,'title':childSnap.val().title,'isCompleted':childSnap.val().isCompleted};tasks.push(task);});_this2.setState({todos:tasks});tasks=[];});}},{key:\"addTodo\",value:function addTodo(taskName){var temp={title:taskName,isCompleted:false};this.database.push(temp);}},{key:\"removeTodo\",value:function removeTodo(id){this.database.child(id).remove();}},{key:\"toggleAll\",value:function toggleAll(){var _this3=this;this.state.todos.map(function(todo){if(todo.isCompleted===_this3.state.toggle){var updateTodo={\"id\":todo.id,\"title\":todo.title,\"isCompleted\":!_this3.state.toggle};_this3.database.child(todo.id).update(updateTodo);}_this3.setState({toggle:!_this3.state.toggle});});}},{key:\"toggleTodo\",value:function toggleTodo(todo){var temp={'id':todo.id,'title':todo.title,'isCompleted':!todo.isCompleted};this.database.child(todo.id).update(temp);}},{key:\"updateTodo\",value:function updateTodo(todo,updatedName){var updateTodo={\"id\":todo.id,\"title\":updatedName,\"isCompleted\":todo.isCompleted};this.database.child(todo.id).update(updateTodo);}},{key:\"clearCompleted\",value:function clearCompleted(){var _this4=this;this.state.todos.map(function(todo){if(todo.isCompleted){_this4.database.child(todo.id).remove();}});}},{key:\"updateShow\",value:function updateShow(str){this.setState({filter:str});}},{key:\"updateFilter\",value:function updateFilter(){var temp=[];if(this.state.filter===\"all\"){return this.state.todos;}else if(this.state.filter===\"active\"){this.state.todos.map(function(todo){if(!todo.isCompleted){temp.push(todo);}});return temp;}else if(this.state.filter===\"completed\"){this.state.todos.map(function(todo){if(todo.isCompleted){temp.push(todo);}});return temp;}}},{key:\"render\",value:function render(){var _this5=this;var todos=this.state.todos;var completedCount=0;this.state.todos.forEach(function(todo){if(todo.isCompleted){completedCount++;}});var activeCount=this.state.todos.length-completedCount;var totalCount=this.state.todos.length;return React.createElement(\"section\",{className:\"todoform\"},React.createElement(TodoForm,{addTodo:this.addTodo}),React.createElement(\"section\",{className:\"main\"},todos.length>0&&React.createElement(\"input\",{id:\"toggle-all\",className:\"toggle-all\",type:\"checkbox\",checked:activeCount===0,onChange:this.toggleAll}),React.createElement(\"label\",{htmlFor:\"toggle-all\"}),React.createElement(\"ul\",{className:\"todo\"},this.updateFilter().map(function(todo){return React.createElement(Todo,{key:todo.id,task:todo,removeTodo:_this5.removeTodo,toggleTodo:_this5.toggleTodo,updateTodo:_this5.updateTodo});}))),totalCount>0&&React.createElement(FooterBar,{activeCount:activeCount,updateShow:this.updateShow,completedCount:completedCount,clearCompleted:this.clearCompleted}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/usr/src/app/src/App.js"],"names":["React","TodoForm","Todo","FooterBar","DB_CONFIG","firebase","App","props","addTodo","bind","updateFilter","removeTodo","toggleAll","toggleTodo","updateTodo","clearCompleted","updateShow","app","initializeApp","database","ref","child","state","todos","toggle","filter","tasks","on","snap","forEach","childSnap","task","key","val","title","isCompleted","push","setState","taskName","temp","id","remove","map","todo","update","updatedName","str","completedCount","activeCount","length","totalCount","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoForm from './components/TodoForm'\nimport Todo from './components/Todo'\nimport FooterBar from './components/FooterBar'\nimport { DB_CONFIG } from './config/config'\nimport firebase from 'firebase/app'\nimport 'firebase/database'\n\nimport './App.css'\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addTodo = this.addTodo.bind(this);\n        this.updateFilter=this.updateFilter.bind(this);\n        this.removeTodo=this.removeTodo.bind(this);\n        this.toggleAll=this.toggleAll.bind(this);\n        this.toggleTodo=this.toggleTodo.bind(this);\n        this.updateTodo=this.updateTodo.bind(this);\n        this.clearCompleted=this.clearCompleted.bind(this);\n        this.updateShow=this.updateShow.bind(this);\n        this.app = firebase.initializeApp(DB_CONFIG);\n        this.database = this.app.database().ref().child('todos');\n        this.state = {\n                    todos: [],\n\n                    toggle: false,\n                    filter: \"all\"\n                    }\n\n    }\n        componentWillMount() {\n                var tasks = [];\n                this.database.on('value', (snap) => {\n\n                        snap.forEach((childSnap) => {\n\n                            var task = {\n                                'id': childSnap.key,\n                                'title': childSnap.val().title,\n                                'isCompleted': childSnap.val().isCompleted\n                            }\n                            tasks.push(task)\n                        });\n                        this.setState({todos: tasks});\n\n                        tasks = [];\n                    }\n                )\n\n    }\n\n\n\n    addTodo(taskName) {\n             const temp = {\n                 title: taskName,\n                 isCompleted: false\n             }\n             this.database.push(temp);\n\n         }\n\n    removeTodo(id) {\n\n            this.database.child(id).remove();\n        }\n\n\n    toggleAll() {\n             this.state.todos.map((todo) => {\n                if (todo.isCompleted === this.state.toggle) {\n                    var updateTodo = {\n                        \"id\": todo.id,\n                        \"title\": todo.title,\n                        \"isCompleted\": !this.state.toggle\n                    }\n                    this.database.child(todo.id).update(updateTodo);\n                }\n                this.setState({toggle: !this.state.toggle})\n\n            })\n        }\n\n\n\n\n    toggleTodo(todo) {\n\n            const temp = {\n                'id': todo.id,\n                'title': todo.title,\n                'isCompleted': !todo.isCompleted\n            }\n            this.database.child(todo.id).update(temp)\n        }\n\n    updateTodo(todo, updatedName) {\n            var updateTodo = {\n                \"id\": todo.id,\n                \"title\": updatedName,\n                \"isCompleted\": todo.isCompleted\n            }\n            this.database.child(todo.id).update(updateTodo);\n        }\n\n clearCompleted() {\n         this.state.todos.map((todo) => {\n             if (todo.isCompleted) {\n                 this.database.child(todo.id).remove();\n             }\n         })\n     }\n updateShow(str) {\n          this.setState({filter: str});\n                        }\n updateFilter() {\n\n                    var temp = []\n                        if (this.state.filter === \"all\") {\n                            return this.state.todos\n                        }\n                        else if (this.state.filter === \"active\") {\n                            this.state.todos.map((todo) => {\n                                if (!todo.isCompleted) {\n                                    temp.push(todo)\n\n                                }\n                            })\n                            return temp;\n                        }\n                        else if (this.state.filter === \"completed\") {\n                            this.state.todos.map((todo) => {\n                                if (todo.isCompleted) {\n                                    temp.push(todo)\n                                }\n                            })\n                            return temp;\n                        }\n\n                    }\n\n\n\n\n    render(){\n\n   let {todos} = this.state\n            let completedCount = 0\n            this.state.todos.forEach((todo) => {\n                if (todo.isCompleted) {\n                    completedCount++\n                }\n            })\n            let activeCount = this.state.todos.length - completedCount\n            let totalCount = this.state.todos.length\n\n\n        return(\n\n        <section className=\"todoform\">\n\n\n            <TodoForm  addTodo={this.addTodo} />\n\n                <section className=\"main\">\n                                    {todos.length > 0 &&\n                                    <input id=\"toggle-all\"\n                                           className=\"toggle-all\"\n                                           type=\"checkbox\"\n                                           checked={activeCount === 0}\n                                           onChange={this.toggleAll}\n\n                                    />}\n                                    <label htmlFor=\"toggle-all\"/>\n\n\n                                      <ul className=\"todo\">\n                                          {\n                                             this.updateFilter().map((todo) => {\n                                                 return (\n                                                         <Todo key={todo.id} task={todo}\n                                                                  removeTodo={this.removeTodo}\n                                                                  toggleTodo={this.toggleTodo}\n                                                                  updateTodo={this.updateTodo}\n                                                            />\n                                                        )\n                                                        })\n                                                        }\n                                            </ul>\n\n\n\n                                    </section>\n                                   {totalCount > 0 &&\n                                         <FooterBar\n                                            activeCount={activeCount}\n                                            updateShow={this.updateShow}\n                                            completedCount={completedCount}\n                                            clearCompleted={this.clearCompleted}\n                                        />\n                                            }\n                        </section>\n )}\n        }\nexport default App;\n"]},"metadata":{},"sourceType":"module"}