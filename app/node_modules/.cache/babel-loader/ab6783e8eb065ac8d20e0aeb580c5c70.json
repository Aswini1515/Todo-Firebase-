{"ast":null,"code":"import _classCallCheck from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/usr/src/app/node_modules/@babel/runtime/helpers/esm/inherits\";import*as React from'react';var TodoForm=/*#__PURE__*/function(_React$Component){_inherits(TodoForm,_React$Component);function TodoForm(props){var _this;_classCallCheck(this,TodoForm);_this=_possibleConstructorReturn(this,_getPrototypeOf(TodoForm).call(this,props));_this.state={newTitle:''};_this.handleUserInput=_this.handleUserInput.bind(_assertThisInitialized(_this));_this.writeTodo=_this.writeTodo.bind(_assertThisInitialized(_this));return _this;}_createClass(TodoForm,[{key:\"handleUserInput\",value:function handleUserInput(e){this.setState({newTitle:e.target.value});}},{key:\"writeTodo\",value:function writeTodo(e){var key=e.keyCode||e.which;var tittle=this.state.newTitle;if(key===13&&tittle.replace(/\\s*/,'').length!==0){this.props.addTodo(this.state.newTitle);this.setState({newTitle:''});}}},{key:\"render\",value:function render(){return React.createElement(\"header\",{className:\"header\"},React.createElement(\"h1\",null,\"Todos\"),React.createElement(\"input\",{className:\"new-todo\",placeholder:\"What needs to be done? \",value:this.state.newTitle,onChange:this.handleUserInput,onKeyPress:this.writeTodo}));}}]);return TodoForm;}(React.Component);export default TodoForm;","map":{"version":3,"sources":["/usr/src/app/src/components/TodoForm.js"],"names":["React","TodoForm","props","state","newTitle","handleUserInput","bind","writeTodo","e","setState","target","value","key","keyCode","which","tittle","replace","length","addTodo","Component"],"mappings":"wlBAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,GAEMC,CAAAA,Q,8EACF,kBAAYC,KAAZ,CAAkB,0CACd,0EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACDC,QAAQ,CAAE,EADT,CAAb,CAGA,MAAKC,eAAL,CAAuB,MAAKA,eAAL,CAAqBC,IAArB,+BAAvB,CACA,MAAKC,SAAL,CAAiB,MAAKA,SAAL,CAAeD,IAAf,+BAAjB,CANc,aAQjB,C,6EACeE,C,CAAG,CACX,KAAKC,QAAL,CAAc,CACNL,QAAQ,CAAEI,CAAC,CAACE,MAAF,CAASC,KADb,CAAd,EAGH,C,4CAEKH,C,CAAG,CACL,GAAII,CAAAA,GAAG,CAAGJ,CAAC,CAACK,OAAF,EAAaL,CAAC,CAACM,KAAzB,CAEA,GAAIC,CAAAA,MAAM,CAAG,KAAKZ,KAAL,CAAWC,QAAxB,CACA,GAAIQ,GAAG,GAAK,EAAR,EAAcG,MAAM,CAACC,OAAP,CAAe,KAAf,CAAqB,EAArB,EAAyBC,MAAzB,GAAkC,CAApD,CAAuD,CACnD,KAAKf,KAAL,CAAWgB,OAAX,CAAmB,KAAKf,KAAL,CAAWC,QAA9B,EACA,KAAKK,QAAL,CAAc,CACVL,QAAQ,CAAE,EADA,CAAd,EAGH,CACA,C,uCACL,CACJ,MACgB,+BAAQ,SAAS,CAAC,QAAlB,EACA,sCADA,CAEA,6BAAO,SAAS,CAAC,UAAjB,CACO,WAAW,CAAC,yBADnB,CAEO,KAAK,CAAE,KAAKD,KAAL,CAAWC,QAFzB,CAGO,QAAQ,CAAE,KAAKC,eAHtB,CAIO,UAAU,CAAE,KAAKE,SAJxB,EAFA,CADhB,CAUH,C,sBAtCsBP,KAAK,CAACmB,S,EAwC7B,cAAelB,CAAAA,QAAf","sourcesContent":["import * as React from 'react';\n\nclass TodoForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n                    newTitle: '',\n                };\n        this.handleUserInput = this.handleUserInput.bind(this);\n        this.writeTodo = this.writeTodo.bind(this);\n\n    }\n    handleUserInput(e) {\n            this.setState({\n                    newTitle: e.target.value\n            })\n        }\n\n    writeTodo(e) {\n            var key = e.keyCode || e.which;\n\n            var tittle = this.state.newTitle\n            if (key === 13 && tittle.replace(/\\s*/,'').length!==0) {\n                this.props.addTodo(this.state.newTitle)\n                this.setState({\n                    newTitle: '',\n                })\n            }\n            }\nrender(){\n    return(\n                    <header className=\"header\">\n                    <h1>Todos</h1>\n                    <input className='new-todo'\n                           placeholder=\"What needs to be done? \"\n                           value={this.state.newTitle}\n                           onChange={this.handleUserInput}\n                           onKeyPress={this.writeTodo}/>\n                    </header>\n)\n}\n}\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}