{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/components/TodoForm.js\";\nimport * as React from 'react';\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newTitle: ''\n    };\n    this.handleUserInput = this.handleUserInput.bind(this);\n    this.writeTodo = this.writeTodo.bind(this);\n  }\n\n  handleUserInput(e) {\n    this.setState({\n      newTitle: e.target.value\n    });\n  }\n\n  writeTodo(e) {\n    var key = e.keyCode || e.which;\n    var tittle = this.state.newTitle;\n\n    if (key === 13 && tittle.replace(/\\s*/, '').length !== 0) {\n      this.props.addTodo(this.state.newTitle);\n      this.setState({\n        newTitle: ''\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Todos\"), React.createElement(\"input\", {\n      className: \"new-todo\",\n      placeholder: \"What needs to be done? \",\n      value: this.state.newTitle,\n      onChange: this.handleUserInput,\n      onKeyPress: this.writeTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/usr/src/app/src/components/TodoForm.js"],"names":["React","TodoForm","Component","constructor","props","state","newTitle","handleUserInput","bind","writeTodo","e","setState","target","value","key","keyCode","which","tittle","replace","length","addTodo","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACDC,MAAAA,QAAQ,EAAE;AADT,KAAb;AAGA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AAEH;;AACDD,EAAAA,eAAe,CAACG,CAAD,EAAI;AACX,SAAKC,QAAL,CAAc;AACNL,MAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AADb,KAAd;AAGH;;AAELJ,EAAAA,SAAS,CAACC,CAAD,EAAI;AACL,QAAII,GAAG,GAAGJ,CAAC,CAACK,OAAF,IAAaL,CAAC,CAACM,KAAzB;AAEA,QAAIC,MAAM,GAAG,KAAKZ,KAAL,CAAWC,QAAxB;;AACA,QAAIQ,GAAG,KAAK,EAAR,IAAcG,MAAM,CAACC,OAAP,CAAe,KAAf,EAAqB,EAArB,EAAyBC,MAAzB,KAAkC,CAApD,EAAuD;AACnD,WAAKf,KAAL,CAAWgB,OAAX,CAAmB,KAAKf,KAAL,CAAWC,QAA9B;AACA,WAAKK,QAAL,CAAc;AACVL,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH;AACA;;AACbe,EAAAA,MAAM,GAAE;AACJ,WACgB;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA;AAAO,MAAA,SAAS,EAAC,UAAjB;AACO,MAAA,WAAW,EAAC,yBADnB;AAEO,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,QAFzB;AAGO,MAAA,QAAQ,EAAE,KAAKC,eAHtB;AAIO,MAAA,UAAU,EAAE,KAAKE,SAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADhB;AAUH;;AAtCqC;;AAwCtC,eAAeR,QAAf","sourcesContent":["import * as React from 'react';\n\nclass TodoForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n                    newTitle: '',\n                };\n        this.handleUserInput = this.handleUserInput.bind(this);\n        this.writeTodo = this.writeTodo.bind(this);\n\n    }\n    handleUserInput(e) {\n            this.setState({\n                    newTitle: e.target.value\n            })\n        }\n\n    writeTodo(e) {\n            var key = e.keyCode || e.which;\n\n            var tittle = this.state.newTitle\n            if (key === 13 && tittle.replace(/\\s*/,'').length!==0) {\n                this.props.addTodo(this.state.newTitle)\n                this.setState({\n                    newTitle: '',\n                })\n            }\n            }\nrender(){\n    return(\n                    <header className=\"header\">\n                    <h1>Todos</h1>\n                    <input className='new-todo'\n                           placeholder=\"What needs to be done? \"\n                           value={this.state.newTitle}\n                           onChange={this.handleUserInput}\n                           onKeyPress={this.writeTodo}/>\n                    </header>\n)\n}\n}\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}